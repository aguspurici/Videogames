{"version":3,"sources":["App.js","reportWebVitals.js","redux/reducer/reducer.js","redux/store/index.js","index.js"],"names":["App","_jsx","className","children","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","videogames","allGames","genres","detailGame","genData","rootReducer","state","arguments","length","undefined","action","type","sortedArr","payload","sort","a","b","name","toLowerCase","_objectSpread","error","createGames","forEach","elm","console","log","filter","createdInDb","videogamesByGenre","genre","includes","sortedArr2","rating","_toConsumableArray","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","React","StrictMode","BrowserRouter","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.cc48d118.chunk.js","sourcesContent":["import './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Videogames</h1>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    videogames: [],\r\n    allGames: [],\r\n    genres: [],\r\n    detailGame: [],\r\n    genData: [],\r\n  };\r\n  \r\n  function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case \"ORDER_BY_NAME\":\r\n        let sortedArr =\r\n          action.payload === \"asc-alf\"\r\n            ? state.videogames.sort((a, b) => {\r\n                if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                  return -1;\r\n                }\r\n                if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              })\r\n            : state.videogames.sort((a, b) => {\r\n                if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                  return -1;\r\n                }\r\n                if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              });\r\n        return {\r\n          ...state,\r\n          videogames: sortedArr,\r\n        };\r\n      case \"GET_VIDEOGAMES\":\r\n        return {\r\n          ...state,\r\n          videogames: action.payload ? action.payload : { error: \"No data\" },\r\n          allGames: action.payload ? action.payload : { error: \"No data\" },\r\n        };\r\n      case \"GET_NAME_VIDEOGAMES\":\r\n        return {\r\n          ...state,\r\n          videogames: action.payload,\r\n        };\r\n      case \"GET_GENRES\":\r\n        return {\r\n          ...state,\r\n          genres: action.payload,\r\n        };\r\n      case \"GET_GAMES_BYID\":\r\n        return {\r\n          ...state,\r\n          detailGame: action.payload,\r\n        };\r\n  \r\n      case \"FILTER_CREATED\":\r\n        state.videogames = state.allGames;\r\n        let createGames = state.videogames;\r\n        createGames.forEach((elm) => console.log(elm));\r\n  \r\n        if (action.payload === \"null\") {\r\n          createGames = state.videogames;\r\n        }\r\n        if (action.payload === \"new-games\") {\r\n          createGames = state.videogames.filter(\r\n            (elm) => elm.createdInDb === true\r\n          );\r\n        }\r\n        if (action.payload === \"old-games\") {\r\n          createGames = state.videogames.filter((elm) => !elm.createdInDb);\r\n        }\r\n        return {\r\n          ...state,\r\n          videogames: createGames,\r\n        };\r\n      case \"POST_VIDEOGAMES\":\r\n        return {\r\n          ...state,\r\n        };\r\n  \r\n      case \"ORDER_BY_GENRE\":\r\n        state.videogames = state.allGames;\r\n        let videogamesByGenre = state.videogames;\r\n        if (action.payload === \"null\") {\r\n          videogamesByGenre = state.allGames;\r\n        } else {\r\n          videogamesByGenre = state.allGames.filter((elm) =>\r\n            elm.genre.includes(action.payload)\r\n          );\r\n        }\r\n        return {\r\n          ...state,\r\n          videogames: videogamesByGenre,\r\n        };\r\n  \r\n      case \"ORDER_BY_RATING\":\r\n        let sortedArr2 =\r\n          action.payload === \"mayorRating\"\r\n            ? state.videogames.sort((a, b) => {\r\n                if (a.rating < b.rating) {\r\n                  return -1;\r\n                }\r\n                if (a.rating > b.rating) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              })\r\n            : state.videogames.sort((a, b) => {\r\n                if (a.rating > b.rating) {\r\n                  return -1;\r\n                }\r\n                if (a.rating < b.rating) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              });\r\n        return {\r\n          ...state,\r\n          videogames: [...sortedArr2],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default rootReducer;","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducer/reducer.js\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport  store   from './redux/store/index';\nimport { BrowserRouter } from \"react-router-dom\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}